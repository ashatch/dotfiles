[user]
    name = Andrew Hatch
    email = ahatch@amplience.com

[alias]
    fp = fetch --prune
    cp = cherry-pick
    st = status
    cl = clone
    ci = commit
    co = checkout
    br = branch
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    ec = config --global -e
    po = push -u origin
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive
    cob = checkout -b
    cm = !git add -A && git commit -m
    save = !git add -A && git commit -m 'SAVEPOINT'
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    bclean = "!f() { git branch --merged ${1-develop} | grep -v " ${1-develop}$" | xargs git branch -d; }; f"
    bdone = "!f() { git checkout ${1-develop} && git up && git bclean ${1-develop}; }; f"
    repo-name = "!f() { name=$(git remote get-url origin); name=${name#*:}; name=${name%.git}; echo $name; }; f"
    current-branch = rev-parse --abbrev-ref HEAD
    tracking-branch = "!f() { name=$(git rev-parse --abbrev-ref @{u}); echo ${name#*/}; }; f"
    pr = !open "http://bitbucket.org/$(git repo-name)/pull-requests/new?source=$(git repo-name)::$(git tracking-branch)"
    sync = "!f() { b=$(git current-branch); git up && git co ${1-develop} && git up && git co $b && git merge ${1-develop}; }; f"
    por = !git po && git pr
    unstage = reset HEAD -- .

[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[push]
    default = current
[merge]
    tool = vscode
[mergetool "vscode"]
    cmd = "code --wait "
[credential]
    helper = osxkeychain
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
